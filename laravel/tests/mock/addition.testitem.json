{
    "variableDeclarations": {
        "num1": {
            "baseType": "number",
            "value": 5,
            "minVal": 0,
            "maxVal": 10
        },
        "num2": {
            "baseType": "number",
            "value": 15,
            "minVal": 10,
            "maxVal": 30
        }
    },
    "@doc": "This section declares participant's input fields (submission)",
    "responseDeclarations": {
        "field1": {
            "cardinality": "multiple",
            "baseType": "number"
        }
    },

    "outcomeDeclarations": {
        "@doc": "The following is a ",
        "score": {
            "cardinality": "single",
            "baseType": "number",
            "@doc": "This data must be stripped out",
            "defaultValue": 0
        }
    },
    "modelDefinition": {

        "question1": {
            "prompt": "What is <%=num1%> + <%=num2%>",
            "fields": [
                {
                    "responseId": "field1"
                }
            ]
        }
    },

    "responseProcessing": {

        "@doc": "Next block is a 'when' statement. The player is responsible",
        "@doc": "of implementing the statement evaluator",
        "when": [
            {
                "@doc": "For the meantime, this is the method for init",
                "case": "true",
                "then": {
                    "field1.score": 0,
                    "field1.feedback": "Incorrect"
                }
            },
            {
                "case": "$field1_value > $var_num1 + $var_num2",
                "then": {
                    "field1.score": 0,
                    "field1.feedback": "NUMBER TOO BIG"
                }
            },
            {
                "case": "$field1_value < $var_num1 + $var_num2",
                "then": {
                    "field1.score": 0,
                    "field1.feedback": "NUMBER TOO SMALL"
                }
            },
            {
                "case": "$field1_value == $var_num1 + $var_num2",
                "then": {
                    "field1.score": 1,
                    "field1.feedback": "NUMBER Just right!!"
                }
            }
        ]
    },

    "@doc": "This section is defines the structure of this item.",
    "body": {
        "mainComponent": "my_question",
        "components": {
            "@doc": "Each component has two properties, type and config.",
            "my_question": {
                "type": "TemplateContainer",
                "config": {
                    "template": "<div>{{.component.textfield}}  {{actionbar}}</div>"
                }
            },
            "selectquestion": {
                "type": "SelectQuestion",
                "config": {
                    "question": { "_ref" : ".model.question1"},
                    "@doc": "Optionally the question property may include the",
                    "@doc": "full definition of the question.",
                    "layout": "flow"
                }
            },
            "textfield": {
                "type": "TextFieldQuestion",
                "config": {
                    "question": { "_ref" : ".model.question1"},
                    "layout": "flow"
                }
            },
            "actionbar": {
                "type": "ActionBar",
                "config": {
                    "items": [
                        "submit"
                    ]
                }
            },
            "feedback": {
                "type": "Feedback",
                "config": {
                    "display": "list",
                    "@doc": "In the client-side player, this is the path",
                    "@doc": "to the store (Redux)",
                    "messageRef": "_aggregate_.feedback"
                }
            }
        }
    },

    "@doc": "This section defines the default policy which can be overriden",
    "@doc": "by runtime environment",
    "defaultPolicy": {
        "maxAttempts": 3,
        "@doc": "Optional - if present, each attempt will be timed in seconds",
        "timed": 10,
        "@doc": "If timed is present, following action takes place when time is over",
        "onTimeOver": "autosubmit"
    },

    "@doc": "This section defines custom actions.",
    "@doc": "WARNING: Specification of this section is not final.",
    "actions": {
        "solution": "2 * 2 = 4; also -2 * -2 = 4",
        "@doc": "hints is an array in the order that is shown per attempt failure",
        "hints": [
            "What multiplied twice gives 4?",
            "Remember that multiplying two negatives yields positive."
        ]
    }
}
